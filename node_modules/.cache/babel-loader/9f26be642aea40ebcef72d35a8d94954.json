{"remainingRequest":"/Users/changbin/Documents/workspace/nextstop/nextstop-admin/node_modules/babel-loader/lib/index.js!/Users/changbin/Documents/workspace/nextstop/nextstop-admin/src/utils/request.js","dependencies":[{"path":"/Users/changbin/Documents/workspace/nextstop/nextstop-admin/src/utils/request.js","mtime":1637850434299},{"path":"/Users/changbin/Documents/workspace/nextstop/nextstop-admin/node_modules/cache-loader/dist/cjs.js","mtime":1637819675662},{"path":"/Users/changbin/Documents/workspace/nextstop/nextstop-admin/node_modules/babel-loader/lib/index.js","mtime":1637819675721}],"contextDependencies":[],"result":["import axios from 'axios';\nimport qs from 'qs';\n\naxios.defaults.validateStatus = function (status) {\n  return status < 500;\n}; // 设置请求token\n\n\naxios.interceptors.request.use(function (config) {\n  var token = sessionStorage.getItem('access_token');\n  config.headers['Authorization'] = 'Bearer ' + token;\n  return config;\n}); // 接口错误拦截\n\naxios.interceptors.response.use(function (res) {\n  if (res.status === 401) {\n    sessionStorage.removeItem('access_token');\n    sessionStorage.removeItem('token_type');\n    sessionStorage.removeItem('refresh_token');\n    sessionStorage.removeItem('expires_in');\n    sessionStorage.removeItem('user_id');\n    sessionStorage.removeItem('user_name');\n    sessionStorage.removeItem('real_name');\n    sessionStorage.removeItem('user_email'); // console.log({'router': router});\n\n    router.push({\n      path: '/login'\n    });\n    return res;\n  } else {\n    return res;\n  }\n}, function (err) {\n  return Promise.reject(err);\n});\naxios.defaults.baseURL = 'http://localhost:8081';\naxios.defaults.timeout = 1000 * 30;\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';\naxios.defaults.headers.get['Content-Type'] = 'application/json'; //公共登陆部分\n\nexport var requestToken = function requestToken(params) {\n  return axios.post('/oauth/token', params).then(function (res) {\n    return res.data;\n  });\n}; //客户列表\n\nexport var clientUserList = function clientUserList(params) {\n  return axios.post('/ns/admin/client/clientUserList', params).then(function (res) {\n    return res.data;\n  });\n}; //新增客户\n\nexport var saveClientUser = function saveClientUser(params) {\n  return axios.post('/ns/admin/client/saveClientUser', qs.stringify(params)).then(function (res) {\n    return res.data;\n  });\n}; //更新客户\n\nexport var updateClientUser = function updateClientUser(params) {\n  return axios.post('/ns/admin/client/updateClientUser', qs.stringify(params)).then(function (res) {\n    return res.data;\n  });\n}; //更改客户停用状态\n\nexport var changeUserDelStatus = function changeUserDelStatus(params) {\n  return axios.post('/ns/admin/client/changeDelStatus', params).then(function (res) {\n    return res.data;\n  });\n}; //更改客户VIP状态\n\nexport var changeUserVipStatus = function changeUserVipStatus(params) {\n  return axios.post('/ns/admin/client/changeVipStatus', params).then(function (res) {\n    return res.data;\n  });\n};",{"version":3,"sources":["/Users/changbin/Documents/workspace/nextstop/nextstop-admin/src/utils/request.js"],"names":["axios","qs","defaults","validateStatus","status","interceptors","request","use","config","token","sessionStorage","getItem","headers","response","res","removeItem","router","push","path","err","Promise","reject","baseURL","timeout","post","get","requestToken","params","then","data","clientUserList","saveClientUser","stringify","updateClientUser","changeUserDelStatus","changeUserVipStatus"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport qs from 'qs';\n\naxios.defaults.validateStatus = status => {\n    return status < 500;\n  };\n  \n  // 设置请求token\n  axios.interceptors.request.use(config => {\n    let token = sessionStorage.getItem('access_token');\n    config.headers['Authorization'] = 'Bearer ' + token;\n    return config;\n  });\n  \n  // 接口错误拦截\n  axios.interceptors.response.use(res => {\n    if (res.status === 401) {\n      sessionStorage.removeItem('access_token');\n      sessionStorage.removeItem('token_type');\n      sessionStorage.removeItem('refresh_token');\n      sessionStorage.removeItem('expires_in');\n      sessionStorage.removeItem('user_id');\n      sessionStorage.removeItem('user_name');\n      sessionStorage.removeItem('real_name');\n      sessionStorage.removeItem('user_email');\n      // console.log({'router': router});\n      router.push({path: '/login'});\n      return res;\n    } else {\n      return res;\n    }\n  }, err => {\n    return Promise.reject(err)\n  });\n  \n  \n  axios.defaults.baseURL = 'http://localhost:8081';\n  axios.defaults.timeout = 1000 * 30;\n  axios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded;charset=utf-8';\n  axios.defaults.headers.get['Content-Type'] = 'application/json';\n  \n  //公共登陆部分\n  export const requestToken = params => {\n    return axios.post('/oauth/token', params).then(res => res.data);\n  };\n\n  //客户列表\n  export const clientUserList = params => {\n    return axios.post('/ns/admin/client/clientUserList', params).then(res => res.data);\n  };\n\n  //新增客户\n  export const saveClientUser = params => {\n    return axios.post('/ns/admin/client/saveClientUser', qs.stringify(params)).then(res => res.data);\n  };\n\n  //更新客户\n  export const updateClientUser = params => {\n    return axios.post('/ns/admin/client/updateClientUser', qs.stringify(params)).then(res => res.data);\n  };\n  //更改客户停用状态\n  export const changeUserDelStatus = params => {\n    return axios.post('/ns/admin/client/changeDelStatus', params).then(res => res.data);\n  };\n  //更改客户VIP状态\n  export const changeUserVipStatus = params => {\n    return axios.post('/ns/admin/client/changeVipStatus', params).then(res => res.data);\n  };\n"]}]}